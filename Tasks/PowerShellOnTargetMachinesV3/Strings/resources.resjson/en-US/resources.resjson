{
  "loc.friendlyName": "PowerShell on target machines",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=873465)",
  "loc.description": "Execute PowerShell scripts on remote machines using PSSession and Invoke-Command for remoting",
  "loc.instanceNameFormat": "Run PowerShell on Target Machines",
  "loc.releaseNotes": "Use PSSession and invoke-command to perform remoting on target machines.<br/><br/>* Added support for inline script execution.<br/><br/>* Default and Credssp authentication are supported.<br/><br/>* Added options for error handling: ErrorActionPreference, ignoreLASTEXITCODE and Fail on Standard Error.",
  "loc.group.displayName.ScriptOptions": "Script options",
  "loc.group.displayName.SessionOptions": "PSSession options",
  "loc.group.displayName.ErrorHandlingOptions": "Error handling options",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.Machines": "Machines",
  "loc.input.help.Machines": "Provide a comma separated list of machine IP addresses or FQDNs along with ports. Port is defaulted based on the selected protocol. <br>Eg: dbserver.fabrikam.com,dbserver_int.fabrikam.com:5986,192.168.12.34:5986 <br>Or provide build or release variables. Eg: $(variableName) <br>If you are using HTTPS, name/IP of machine should match the CN in the certificate.",
  "loc.input.label.UserName": "Username",
  "loc.input.help.UserName": "Username for the target machines. The user should be a part of Administrators group or WinRM remote management users group. <br> Eg: Format: Domain\\Admin User, Admin User@Domain, .\\Admin User",
  "loc.input.label.UserPassword": "Password",
  "loc.input.help.UserPassword": "password for the target machines. <br>It can accept variable defined in build or release pipelines as '$(passwordVariable)'. <br>You may mark variable type as 'secret' to secure it.",
  "loc.input.label.ScriptType": "Script Type",
  "loc.input.help.ScriptType": "The type of script to execute: Inline or File Path",
  "loc.input.label.ScriptPath": "Script File Path",
  "loc.input.help.ScriptPath": "Location of the PowerShell script on the target machines or on a UNC path like C:\\BudgetIT\\Web\\Deploy\\Website.ps1 which should be accessible from the target machine.",
  "loc.input.label.InlineScript": "Script",
  "loc.input.label.ScriptArguments": "Script Arguments",
  "loc.input.help.ScriptArguments": "Arguments for the PowerShell script. Can be ordinal parameters or named parameters like -testParam test",
  "loc.input.label.InitializationScript": "Initialization script",
  "loc.input.help.InitializationScript": "Location of the data script for DSC on the target machines or on a UNC path like C:\\BudgetIT\\Web\\Deploy\\WebsiteConfiguration.ps1",
  "loc.input.label.SessionVariables": "Session Variables",
  "loc.input.help.SessionVariables": "Set common session variables for both the scripts. Variable assignments should be valid PowerShell statements.",
  "loc.input.label.CommunicationProtocol": "Protocol",
  "loc.input.help.CommunicationProtocol": "Select the protocol to use for the WinRM service connection with the machine(s). Default is HTTPS.",
  "loc.input.label.AuthenticationMechanism": "Authentication",
  "loc.input.help.AuthenticationMechanism": "Select the authentication mechanism to be used for creating the pssession. For 'CredSSP' authentication, username and password fields are mandatory.",
  "loc.input.label.NewPsSessionOptionArguments": "Session Option parameters",
  "loc.input.help.NewPsSessionOptionArguments": "Advanced options for remote session (New-PSSessionOption). For example, -SkipCACheck, -SkipCNCheck, -SkipRevocationCheck etc. For a complete list of all session options, see [this](https://aka.ms/Vsts_PS_TM_v3_NewPSSessionOptions)",
  "loc.input.label.ErrorActionPreference": "ErrorActionPreference",
  "loc.input.help.ErrorActionPreference": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your script.",
  "loc.input.label.failOnStderr": "Fail on Standard Error",
  "loc.input.help.failOnStderr": "If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream. Otherwise the task will rely on the exit code to determine failure.",
  "loc.input.label.ignoreLASTEXITCODE": "Ignore $LASTEXITCODE",
  "loc.input.help.ignoreLASTEXITCODE": "If this is false, the line `if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }` is executed at the end of your script. This will cause the last exit code from an external command to be propagated as the exit code of powershell. Otherwise the line is not executed to the end of your script.",
  "loc.input.label.WorkingDirectory": "Working Directory",
  "loc.input.help.WorkingDirectory": "Working directory where the script is run.",
  "loc.input.label.RunPowershellInParallel": "Run PowerShell in Parallel",
  "loc.input.help.RunPowershellInParallel": "Setting it to true will run the PowerShell scripts in parallel on the target machines.",
  "loc.messages.PS_TM_ParseSessionVariablesValueNotFound": "Parsing operation failed. ErrorMessage: 'value not found', Token: '{0}', CurrentKey: '{1}'",
  "loc.messages.PS_TM_ParseSessionVariablesKeyNotFound": "Parsing operation failed. ErrorMessage: 'key not found', Token: '{0}', CurrentKey: '{1}'",
  "loc.messages.PS_TM_InvalidSessionVariablesInputFormat": "Parsing operation failed. Check format of input",
  "loc.messages.PS_TM_TaskFailed": "Task failed with error: '{0}'",
  "loc.messages.PS_TM_SessionConfigurationNameCannotBeNull": "Session configuration name cannot be null",
  "loc.messages.PS_TM_UnableToParseSessionVariables": "Unable to parse session variables input. Verify that it is a valid script. Error: '{0}'"
}