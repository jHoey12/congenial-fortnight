{
  "loc.friendlyName": "Service Fabric 应用程序部署",
  "loc.helpMarkDown": "[详细了解此任务](https://go.microsoft.com/fwlink/?LinkId=820528)",
  "loc.description": "将 Azure Service Fabric 应用程序部署到群集",
  "loc.instanceNameFormat": "部署 Service Fabric 应用程序",
  "loc.group.displayName.advanced": "高级设置",
  "loc.group.displayName.upgrade": "升级设置",
  "loc.group.displayName.docker": "Docker 设置",
  "loc.input.label.applicationPackagePath": "应用程序包",
  "loc.input.help.applicationPackagePath": "要部署的应用程序包的路径。可在路径中使用[变量](https://go.microsoft.com/fwlink/?LinkID=550988)和通配符。",
  "loc.input.label.serviceConnectionName": "群集服务连接",
  "loc.input.help.serviceConnectionName": "选择要用于连接到群集的 Azure Service Fabric 服务连接。此引用的服务连接中定义的设置将替代发布配置文件中定义的设置。选择“管理”以注册新的服务连接。",
  "loc.input.label.publishProfilePath": "发布配置文件",
  "loc.input.help.publishProfilePath": "发布配置文件的路径，该配置文件定义了要使用的路径。可以在路径中使用 [变量](https://go.microsoft.com/fwlink/?LinkID=550988)和通配符。",
  "loc.input.label.applicationParameterPath": "应用程序参数",
  "loc.input.help.applicationParameterPath": "应用程序参数文件的路径。可在路径中使用[变量](https://go.microsoft.com/fwlink/?LinkID=550988)和通配符。如果指定，此值将替代发布配置文件中的值。",
  "loc.input.label.overrideApplicationParameter": "替代应用程序参数",
  "loc.input.help.overrideApplicationParameter": "在生成或发布管道中定义的变量将与应用程序清单文件中的“参数名称”项进行匹配。\n 示例: 如果应用程序具有如下定义的参数。\n <Parameters> \n <Parameter Name=\"SampleApp_PartitionCount\" Value=\"1\" /> \n <Parameter Name=\"SampleApp_InstanceCount\" DefaultValue=\"-1\" /> \n </Parameters> \n 并且想要将分区计数改为 2，则可以定义发布管道或环境变量 \"SampleApp_PartitionCount\" 并将其值定义为 \"2\"。\n\n 请注意: 如果在发布管道和环境中定义相同的变量，那么环境变量将取代发布管道变量。",
  "loc.input.label.compressPackage": "压缩包",
  "loc.input.help.compressPackage": "指示是否应在将应用程序包复制到映像存储之前对其进行压缩。如果已启用，这将替代发布配置文件中的值。",
  "loc.input.label.copyPackageTimeoutSec": "CopyPackageTimeoutSec",
  "loc.input.help.copyPackageTimeoutSec": "将应用程序包复制到映像存储区的超时秒数。如果已指定，该值将替代发布配置文件中的值。",
  "loc.input.label.registerPackageTimeoutSec": "RegisterPackageTimeoutSec",
  "loc.input.help.registerPackageTimeoutSec": "注册或取消注册应用程序包的超时秒数。",
  "loc.input.label.overwriteBehavior": "覆盖行为",
  "loc.input.help.overwriteBehavior": "覆盖行为: 当未配置升级且群集中已存在具有相同名称的应用程序时，以下操作将可用 => Never、Always、SameAppTypeAndVersion。\n    Never 不会删除现有应用程序。这是默认行为。\n    即使现有应用程序的类型和版本不同于正在创建的应用程序，Always 也会删除现有应用程序。\n    仅当现有应用程序的类型和版本与正在创建的应用程序相同时，SameAppTypeAndVersion 才会删除现有应用程序。",
  "loc.input.label.skipUpgradeSameTypeAndVersion": "遇到相同类型和版本时跳过升级",
  "loc.input.help.skipUpgradeSameTypeAndVersion": "当群集中已存在相同的应用程序类型和版本时，指示是否要跳过升级，否则验证过程中的升级将失败。启用后，重新部署为幂等。",
  "loc.input.label.skipPackageValidation": "跳过包验证",
  "loc.input.help.skipPackageValidation": "指示部署前是否应该对包进行验证。",
  "loc.input.label.useDiffPackage": "使用差异包",
  "loc.input.help.useDiffPackage": "使用差异包升级，包中仅含有更新的应用程序文件、更新的应用程序清单和服务清单文件。",
  "loc.input.label.overridePublishProfileSettings": "替代所有发布配置文件升级设置",
  "loc.input.help.overridePublishProfileSettings": "该值会将所有升级设置替代为下方指定的值或默认值(若未指定)。",
  "loc.input.label.isUpgrade": "升级应用程序",
  "loc.input.label.unregisterUnusedVersions": "取消注册未使用的版本",
  "loc.input.help.unregisterUnusedVersions": "指示升级后是否删除所有未使用的应用程序类型版本。",
  "loc.input.label.upgradeMode": "升级模式",
  "loc.input.label.FailureAction": "FailureAction",
  "loc.input.label.UpgradeReplicaSetCheckTimeoutSec": "UpgradeReplicaSetCheckTimeoutSec",
  "loc.input.label.TimeoutSec": "TimeoutSec",
  "loc.input.label.ForceRestart": "ForceRestart",
  "loc.input.label.HealthCheckRetryTimeoutSec": "HealthCheckRetryTimeoutSec",
  "loc.input.label.HealthCheckWaitDurationSec": "HealthCheckWaitDurationSec",
  "loc.input.label.HealthCheckStableDurationSec": "HealthCheckStableDurationSec",
  "loc.input.label.UpgradeDomainTimeoutSec": "UpgradeDomainTimeoutSec",
  "loc.input.label.ConsiderWarningAsError": "ConsiderWarningAsError",
  "loc.input.label.DefaultServiceTypeHealthPolicy": "DefaultServiceTypeHealthPolicy",
  "loc.input.label.MaxPercentUnhealthyDeployedApplications": "MaxPercentUnhealthyDeployedApplications",
  "loc.input.label.UpgradeTimeoutSec": "UpgradeTimeoutSec",
  "loc.input.label.ServiceTypeHealthPolicyMap": "ServiceTypeHealthPolicyMap",
  "loc.input.label.configureDockerSettings": "配置 Docker 设置",
  "loc.input.help.configureDockerSettings": "使用指定的 Docker 设置配置应用程序。",
  "loc.input.label.registryCredentials": "注册表凭据源",
  "loc.input.help.registryCredentials": "选择如何提供 Docker 注册表凭据。",
  "loc.input.label.dockerRegistryEndpoint": "Docker 注册表服务连接",
  "loc.input.help.dockerRegistryEndpoint": "选择 Docker 注册表服务连接。需要使用注册表进行身份验证的命令需要此连接。<br/>请注意: 任务将尝试先对注册表机密进行加密，然后再将其传输到 Service Fabric 群集。但要执行此操作，需要在代理计算机上安装群集的服务器证书。如果证书不存在，将不会加密机密。",
  "loc.input.label.azureSubscriptionEndpoint": "Azure 订阅",
  "loc.input.help.azureSubscriptionEndpoint": "选择一个 Azure 订阅。<br/>注意: 任务将尝试先对注册表机密进行加密，然后再将其传输到 Service Fabric 群集。但要执行此操作，需要将群集的服务器证书安装到代理计算机上。如果证书不存在，将不会加密机密。",
  "loc.input.label.registryUserName": "注册表用户名",
  "loc.input.help.registryUserName": "Docker 注册表用户名",
  "loc.input.label.registryPassword": "注册表密码",
  "loc.input.help.registryPassword": "Docker 注册表密码。如果密码未加密，建议使用自定义发布管道机密变量来存储密码。",
  "loc.input.label.passwordEncrypted": "密码已加密",
  "loc.input.help.passwordEncrypted": "建议使用[Invoke-ServiceFabricEncryptText](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-application-secret-management#encrypt-application-secrets) 为密码进行加密。如果不这样做且如果在生成代理上安装了与群集服务连接中的服务器证书指纹匹配的证书，则会使用该证书对密码加密; 否则将发生错误。",
  "loc.messages.DIFFPKG_ApplicationDoesNotExist": "群集 {1} 中不存在将使用差异包进行升级的应用程序 {0}。正在将完整的应用程序包应用于执行部署...",
  "loc.messages.DIFFPKG_ApplicationIsNotChanged": "要使用差异包升级的应用程序 {0} 在群集 {2} 中有正在运行的相同版本 {1}。跳过升级。",
  "loc.messages.DIFFPKG_CopyingToDiffPackge": "正在将 {0} 从完整应用程序包复制到差异包中的 {1}...",
  "loc.messages.DIFFPKG_CreatingDiffPackage": "正在尝试创建差异包...",
  "loc.messages.DIFFPKG_CreatingDiffPackageForService": "正在为服务创建差异包: {0}，clusterServiceManifest.Version: {1}，localServiceManifest.Version: {2}",
  "loc.messages.DIFFPKG_NoServicesRunning": "群集 {1} 中没有运行应用程序 {0} 的任何服务。当前正在应用完整的应用程序包以执行部署...",
  "loc.messages.DIFFPKG_PackageDoesNotExist": "完整应用程序包中不存在包 {0}。跳过将其复制到其他包。",
  "loc.messages.DIFFPKG_ServiceDoesNotExist": "群集 {2} 中不存在要使用差异包升级的应用程序 {1} 的服务 {0}。正在将其复制到差异包...",
  "loc.messages.DIFFPKG_ServiceIsNotChanged": "要使用差异包升级的应用程序 {1} 的服务 {0} 在群集 {3} 中有正在运行到相同版本 {2}。跳过升级。",
  "loc.messages.DIFFPKG_TestAppPkgFailed": "在创建其他包之前，测试应用程序包失败。跳过创建其他包。",
  "loc.messages.ItemSearchMoreThanOneFound": "使用搜索模式“{0}”找到多个项。只能有一个项。",
  "loc.messages.ItemSearchNoFilesFound": "使用搜索模式 {0} 找不到项目。",
  "loc.messages.SearchingForPath": "正在搜索路径: {0}",
  "loc.messages.FoundPath": "发现路径: {0}",
  "loc.messages.PathDoesNotExist": "路径“{0}”不存在。",
  "loc.messages.EmptyApplicationName": "应用程序名称应为非空的字符串",
  "loc.messages.ServiceEndpointUpgradeWarning": "部署任务已升级到新版本，可能伴有重大更改。过去忽略了服务连接中定义的群集终结点，但现在，该终结点将替代发布配置文件中的值。验证终结点正确且带有 \"https://\" 前缀。此外，向该服务连接添加了“服务器证书指纹”字段，此字段也将重写发布配置文件值。服务连接可能尚未更新为允许指定服务器证书指纹，在这种情况下将仍使用发布配置文件中的值，应稍后再试。",
  "loc.messages.OverrideApplicationParameterFile": "使用 Azure Pipelines 任务中指定的“{0}”替代发布配置文件中指定的应用程序参数文件。",
  "loc.messages.OverrideUpgradeSettings": "使用 Azure Pipelines 任务中指定的设置替代发布配置文件中指定的升级设置。",
  "loc.messages.PublishProfileRequiredServerThumbprint": "必须在服务连接上定义服务器证书指纹，或在 Azure Pipelines 任务中指定发布配置文件。",
  "loc.messages.PublishProfileRequiredAppParams": "必须在 Azure Pipelines 任务中指定应用程序参数文件或发布配置文件。",
  "loc.messages.PublishProfileRequiredUpgrade": "必须替代升级设置，或在 Azure Pipelines 任务中指定发布配置文件。",
  "loc.messages.UnsupportedARMAuthScheme": "ARM 终结点不支持身份验证方案 \"{0}\"。",
  "loc.messages.UnsupportedContainerRegistryAuthScheme": "Azure 容器注册表不支持授权方案“{0}”。",
  "loc.messages.SFSDK_InvalidSFPackage": "{0} 不是有效 Service Fabric 应用程序包。",
  "loc.messages.SFSDK_PackageValidationFailed": "以下程序包验证失败: {0}",
  "loc.messages.SFSDK_UnableToVerifyClusterConnection": "无法验证与 Service Fabric 群集的服务连接。",
  "loc.messages.SFSDK_UnableToReadAppTypeAndVersion": "无法从应用程序清单文件读取应用程序类型和版本。",
  "loc.messages.SFSDK_AppAlreadyExistsError": "已存在名为“{0}”的应用程序，其类型是“{1}”，版本是“{2}”。必须首先删除现有应用程序或为应用程序提供新名称，才能部署新应用程序。",
  "loc.messages.SFSDK_AppAlreadyExistsInfo": "群集中已存在名为“{0}”的应用程序，其应用程序类型是“{1}”，版本是“{2}”。请将其删除。",
  "loc.messages.SFSDK_UnregisteringExistingAppType": "已为群集注册应用程序类型“{0}”和版本“{1}”，请取销注册...",
  "loc.messages.SFSDK_SkipUnregisteringExistingAppType": "应用程序类型“{0}”和版本“{1}”已在群集中注册，当前正在使用，因此跳过正在注销的应用程序类型",
  "loc.messages.SFSDK_UnableToUnregisterAppType": "注销现有应用程序类型失败。",
  "loc.messages.SFSDK_CopyingAppToImageStore": "正在将应用程序复制到映像存储区...",
  "loc.messages.SFSDK_CopyingAppToImageStoreFailed": "将应用程序包复制到映像存储区失败。无法继续注册该应用程序。",
  "loc.messages.SFSDK_RegisterAppType": "正在注册应用程序类型...",
  "loc.messages.SFSDK_RegisterAppTypeFailed": "应用程序类型注册失败。",
  "loc.messages.SFSDK_RemoveAppPackage": "正在删除映像存储区中的应用程序包...",
  "loc.messages.SFSDK_CreateApplication": "正在创建应用程序...",
  "loc.messages.SFSDK_CreateApplicationFailed": "应用程序创建失败。",
  "loc.messages.SFSDK_CreateApplicationSuccess": "成功创建应用程序。",
  "loc.messages.SFSDK_AppDoesNotExist": "应用程序“{0}”不存在于群集中。",
  "loc.messages.SFSDK_AppTypeMismatch": "应用程序“{0}”的应用程序类型与新应用程序包的应用程序清单中的应用程序类型不匹配。请确保升级的应用程序具有相同的应用程序类型。",
  "loc.messages.SFSDK_UpgradeInProgressError": "应用程序“{0}”的升级已在进行中。",
  "loc.messages.SFSDK_StartAppUpgrade": "开始升级应用程序...",
  "loc.messages.SFSDK_StartUpgradeFailed": "未能启动应用程序升级。错误 {0}。",
  "loc.messages.SFSDK_UnregisterAppTypeOnUpgradeFailure": "无法成功启动升级。正在注销应用程序类型“{0}”和版本“{1}”。",
  "loc.messages.SFSDK_CurrentUpgradeState": "当前升级状态:",
  "loc.messages.SFSDK_DomainUpgradeStatus": "域升级状态:",
  "loc.messages.SFSDK_UnregisterUnusedVersions": "正在注销其他未使用的应用程序类型版本...",
  "loc.messages.SFSDK_UpgradeSuccess": "已成功完成升级。",
  "loc.messages.SFSDK_UpgradeRolledBack": "升级已回退。",
  "loc.messages.SFSDK_UnzipPackage": "正在尝试将“{0}”解压缩到位置“{1}”。",
  "loc.messages.SFSDK_UnexpectedError": "出现意外错误。错误详细信息: $_.Exception.Message",
  "loc.messages.SFSDK_CopyPackageTimeoutSecWarning": "CopyPackageTimeoutSec 参数需要版本 2.3 的 Service Fabric SDK，但安装的版本为“{0}”。此参数将被忽略。",
  "loc.messages.SFSDK_CompressPackageWarning": "CompressPackage 参数需要 \"2.5\" 版本的 Service Fabric SDK，但安装的版本是“{0}”。此参数将被忽略。",
  "loc.messages.SFSDK_SkipUpgradeWarning": "正在跳过升级，因为群集中已存在版本为“{1}”的应用程序类型“{0}”。",
  "loc.messages.SFSDK_UnregisterAppTypeFailed": "无法注销应用程序类型。错误: {0}。",
  "loc.messages.SFSDK_PerformingForceRemoveOnTimeout": "删除应用程序“{0}”超时。这意味着服务停滞在 ChangeRole/Close 中，并且无法完成关闭步骤。正在执行应用程序强制删除。",
  "loc.messages.SFSDK_RetryingCopyApplicationPackage": "正在重试上传...",
  "loc.messages.SFSDK_RetryingRegisterApplicationType": "正在重试注册...",
  "loc.messages.SFSDK_RetryingGetApplicationType": "正在获取应用程序类型...",
  "loc.messages.SFSDK_ApplicationTypeProvisioningNotStarted": "未开始预配应用程序类型。",
  "loc.messages.SFSDK_ApplicationTypeProvisioningStarted": "已开始预配应用程序类型。正在等待它完成...",
  "loc.messages.SFSDK_RegisterAppTypeFailedWithStatus": "无法注册应用程序类型。状态: {0}。详细信息: {1}。",
  "loc.messages.SFSDK_ApplicationTypeStatus": "应用程序类型状态: {0}。详细信息: {1}。",
  "loc.messages.SFSDK_ApplicationTypeUnprovisioned": "未预配应用程序类型。将重试注册。",
  "loc.messages.SFSDK_ClusterHealth": "群集运行状况:",
  "loc.messages.SFSDK_ApplicationTypeUnprovisioningStarted": "已开始取消预配应用程序类型。正在等待它完成...",
  "loc.messages.SFSDK_UnregisterAppTypeFailedWithStatus": "无法注销应用程序类型。状态: {0}。详细信息: {1}。",
  "loc.messages.SFSDK_RetryingUnregisterApplicationType": "正在重试注销...",
  "loc.messages.SFSDK_RetryingRemoveApplication": "正在重试删除应用程序...",
  "loc.messages.SFSDK_RetryingCreateApplication": "正在重试创建应用程序...",
  "loc.messages.SFSDK_ApplicationHealth": "正在获取应用程序运行状况:",
  "loc.messages.SFSDK_RetryingUpgradeApplication": "正在重试应用程序升级...",
  "loc.messages.SFSDK_RetryingGetApplicationUpgrade": "正在获取应用程序升级状态...",
  "loc.messages.SFSDK_RetryingGetApplication": "正在从群集中获取应用程序...",
  "loc.messages.SFSDK_RetryingGetServiceType": "正在从群集中获取服务类型...",
  "loc.messages.SFSDK_RetryingGetServiceManifest": "正在从群集中获取服务清单...",
  "loc.messages.SFSDK_RetryingTestClusterConnection": "正在测试与群集的连接...",
  "loc.messages.SFSDK_RetryingTestAppPackage": "正在测试应用程序包...",
  "loc.messages.SFSDK_RetryingGetClusterManifest": "正在获取群集清单...",
  "loc.messages.SFSDK_RetryingRemoveApplicationPackage": "正在重试删除应用程序包..."
}